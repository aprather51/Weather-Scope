{"version":3,"sources":["components/Form.js","components/Weather.js","App.js","serviceWorker.js","index.js","img/weather_scope.png"],"names":["Form","_ref","fetchWeather","react_default","a","createElement","id","onSubmit","type","name","placeholder","className","Weather","props","city","state","temp","number_format_default","value","displayType","decimalScale","description","humidity","error","API_KEY","process","App","country","wind","_callee","e","api_fetch","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","fetch","concat","sent","json","_this","setState","sys","main","speed","weather","message","undefined","stop","this","status","components_Weather","logo","src","imgLogo","alt","forecast","components_Form","reset","handleReset","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.16a62b21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({ fetchWeather }) => (\r\n\t<form id=\"reset\" onSubmit={fetchWeather}>\r\n\t\t<input type=\"text\" name=\"city\" placeholder=\"City...\" />\r\n\t\t<input type=\"text\" name=\"state\" placeholder=\"State...\" />\r\n\t\t<input type=\"text\" name=\"country\" placeholder=\"Country...\" />\r\n\t\t<div className=\"btn-wrap\">\r\n\t\t\t<button>Get Current Weather</button>\r\n\t\t</div>\r\n\t</form>\r\n);\r\nexport default Form;\r\n","import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst Weather = props => (\r\n\t<div className=\"info\">\r\n\t\t<div className=\"location\">\r\n\t\t\t{props.city &&\r\n\t\t\tprops.state && (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{props.city}, {props.state}\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t<div className=\"temp\">\r\n\t\t\t{props.temp && (\r\n\t\t\t\t<h1 className=\"degree\">\r\n\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\tvalue={props.temp}\r\n\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\tdecimalScale={0}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"scale\"> &#8457;</span>\r\n\t\t\t\t</h1>\r\n\t\t\t)}\r\n\t\t</div>\r\n\r\n\t\t<div className=\"description\">\r\n\t\t\t{props.description && <p>{props.description}</p>}\r\n\t\t</div>\r\n\t\t<div className=\"etc\">\r\n\t\t\t<div className=\"humidity\">\r\n\t\t\t\t{props.humidity && (\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Humidity:</strong> {props.humidity}%{' '}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"wind\">\r\n\t\t\t\t{props.humidity && (\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>Wind: </strong> {props.humidity} mph\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div className=\"err\">{props.error && <p>{props.error} </p>}</div>\r\n\t</div>\r\n);\r\n\r\nexport default Weather;\r\n","import React, { Component } from 'react';\nimport './main.scss';\n\n//components\nimport Form from './components/Form';\nimport Weather from './components/Weather';\n\n//img\nimport imgLogo from './img/weather_scope.png';\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nclass App extends Component {\n\tstate = {\n\t\tcity: '',\n\t\tstate: '',\n\t\tcountry: '',\n\t\ttemp: '',\n\t\thumidity: '',\n\t\twind: '',\n\t\tdescription: '',\n\t\terror: ''\n\t};\n\n\t//fetch weather\n\tfetchWeather = async e => {\n\t\te.preventDefault();\n\n\t\t//input value\n\t\tconst city = e.target.elements.city.value;\n\t\tconst state = e.target.elements.state.value;\n\t\tconst country = e.target.elements.country.value;\n\n\t\t//data fetch\n\t\tconst api_fetch = await fetch(\n\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=imperial`\n\t\t);\n\n\t\tconst data = await api_fetch.json();\n\n\t\t//console.log(state);\n\n\t\tif (city && state && country) {\n\t\t\tthis.setState({\n\t\t\t\tcity: data.name,\n\t\t\t\tstate: state,\n\t\t\t\tcountry: data.sys.country,\n\t\t\t\ttemp: data.main.temp,\n\t\t\t\thumidity: data.main.humidity,\n\t\t\t\twind: data.wind.speed,\n\t\t\t\tdescription: data.weather[0].description,\n\t\t\t\terror: data.message\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tcity: undefined,\n\t\t\t\tstate: '',\n\t\t\t\tcountry: undefined,\n\t\t\t\ttemp: undefined,\n\t\t\t\thumidity: undefined,\n\t\t\t\twind: undefined,\n\t\t\t\tdescription: undefined,\n\t\t\t\terror: 'Please Enter Input Value'\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst status = this.state.city || this.state.state || this.country;\n\t\tconst error = this.state.error;\n\t\tconst weather = (\n\t\t\t<Weather\n\t\t\t\tcity={this.state.city}\n\t\t\t\tstate={this.state.state}\n\t\t\t\tcountry={this.state.country}\n\t\t\t\ttemp={this.state.temp}\n\t\t\t\thumidity={this.state.humidity}\n\t\t\t\twind={this.state.wind}\n\t\t\t\tdescription={this.state.description}\n\t\t\t\terror={this.state.error}\n\t\t\t/>\n\t\t);\n\t\tconst logo = (\n\t\t\t<div className=\"img-wrap\">\n\t\t\t\t<img src={imgLogo} alt=\"logo\" />\n\t\t\t</div>\n\t\t);\n\n\t\tconst forecast = status || error ? weather : logo;\n\n\t\treturn (\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"left\">{forecast}</div>\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<div className=\"title\">\n\t\t\t\t\t\t\t<p>Find accurate information about local conditions...</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Form fetchWeather={this.fetchWeather} reset={this.handleReset} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/weather_scope.24d6906e.png\";"],"sourceRoot":""}